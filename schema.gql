# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  name: String!
  username: String!
  companyName: String!
  email: String!
  phone: Float!
  userType: UserType!
  refreshToken: String!
}

enum UserType {
  PROJECT_MANAGER
  NORMAL_STAFF
  CLIENT
  TRADIES
}

type ProjectResponse {
  _id: ID!
  projectName: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
  users: [ID!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProjectListResponse {
  _id: ID!
  projectName: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
  users: [User!]!
}

type Task {
  _id: ID!
  taskName: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
  userId: ID!
  projectId: ID!
}

type Location {
  _id: ID!
  type: String!
  coordinates: [Float!]!
}

type ClockIn {
  _id: ID!
  location: Location!
  time: DateTime!
  userId: ID!
  projectId: ID!
}

type UserTokens {
  accessToken: String!
  refreshToken: String!
}

type Admin {
  id: ID!
  name: String!
  email: String!
  refreshToken: String!
  token: String!
  otp: String!
  otpCreatedAt: String!
}

type Tokens {
  accessToken: String!
  refreshToken: String!
}

type ChangePasswordStatus {
  status: Boolean!
}

type ResetPasswordToken {
  token: String!
}

type ForgetPasswordTokens {
  token: String!
  accessToken: String!
}

type GenerateOtp {
  otp: String!
}

type Query {
  users: [User!]!
  projects: [ProjectListResponse!]!
  tasks: [Task!]!
  clockIns: [ClockIn!]!
  User: User!
  me: Admin!
}

type Mutation {
  createUser(userInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  createProject(projectInput: CreateProjectInput!): ProjectResponse!
  updateProject(updateProjectInput: UpdateProjectInput!): ProjectResponse!
  createTask(createTaskInput: CreateTaskInput!): Task!
  addClockIn(clockInInput: CreateClockInInput!): ClockIn!
  loginUser(data: UserLoginInput!): UserTokens!
  refreshToken(token: String!): Tokens!
  addAdmin(data: CreateAdminInput!): Tokens!
  loginAdmin(data: AdminLoginInput!): Tokens!
  changePassword(data: ChangePasswordInput!): ChangePasswordStatus!
  resetPassword(data: AdminLoginInput!): ResetPasswordToken!
  forgetPassword(data: AdminOtpInput!): ForgetPasswordTokens!
  generateOtp(data: String!): GenerateOtp!
}

input CreateUserInput {
  name: String!
  username: String!
  companyName: String!
  email: String!
  password: String!
  phone: Float!
  userType: UserType!
}

input UpdateUserInput {
  name: String
  username: String
  companyName: String
  email: String
  password: String
  phone: Float
  userType: UserType
  _id: ID!
}

input CreateProjectInput {
  projectName: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
  users: [ID!]!
}

input UpdateProjectInput {
  projectName: String
  description: String
  startDate: DateTime
  endDate: DateTime
  users: [ID!]
  _id: String!
}

input CreateTaskInput {
  taskName: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
  projectId: ID!
}

input CreateClockInInput {
  location: CreateLocationInput!
  time: DateTime!
  projectId: ID!
}

input CreateLocationInput {
  type: String!
  coordinates: [Float!]!
}

input UserLoginInput {
  email: String!
  password: String!
}

input CreateAdminInput {
  name: String!
  email: String!
  password: String!
}

input AdminLoginInput {
  email: String!
  password: String!
}

input ChangePasswordInput {
  email: String!
  token: String!
  password: String!
}

input AdminOtpInput {
  email: String!
  otp: String!
}