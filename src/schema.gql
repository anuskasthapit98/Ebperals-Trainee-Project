# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ClockIn {
  _id: ID!
  location: Location!
  projectId: ID!
  time: DateTime!
  userId: ID!
}

input CreateClockInInput {
  location: CreateLocationInput!
  time: DateTime!
}

input CreateLocationInput {
  coordinates: [Float!]!
  type: String!
}

input CreateProjectInput {
  description: String!
  endDate: DateTime!
  projectName: String!
  startDate: DateTime!
  users: [CreateUserInput!]!
}

input CreateTaskInput {
  description: String!
  endDate: DateTime!
  startDate: DateTime!
  taskName: String!
  userId: ID!
}

input CreateUserInput {
  companyName: String!
  email: String!
  name: String!
  password: String!
  phone: Float!
  userType: UserType!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Location {
  _id: ID!
  coordinates: [Float!]!
  type: String!
}

type Mutation {
  addClockIn(clockInInput: CreateClockInInput!): ClockIn!
  createProject(projectInput: CreateProjectInput!): Project!
  createTask(createTaskInput: CreateTaskInput!): Task!
  createUser(userInput: CreateUserInput!): User!
  updateProject(updateProjectInput: UpdateProjectInput!): Project!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Project {
  _id: ID!
  description: String!
  endDate: DateTime!
  projectName: String!
  startDate: DateTime!
  users: [User!]!
}

type Query {
  clockIns: [ClockIn!]!
  projects: [Project!]!
  tasks: [Task!]!
  users: [User!]!
}

type Task {
  _id: ID!
  description: String!
  endDate: DateTime!
  projectId: ID!
  startDate: DateTime!
  taskName: String!
  userId: ID!
}

input UpdateProjectInput {
  _id: String!
  description: String
  endDate: DateTime
  projectName: String
  startDate: DateTime
  users: [CreateUserInput!]
}

input UpdateUserInput {
  _id: ID!
  companyName: String
  email: String
  name: String
  password: String
  phone: Float
  userType: UserType
  username: String
}

type User {
  _id: ID!
  companyName: String!
  email: String!
  name: String!
  password: String!
  phone: Int!
  userType: UserType!
  username: String!
}

enum UserType {
  c
  ms
  pm
  t
}